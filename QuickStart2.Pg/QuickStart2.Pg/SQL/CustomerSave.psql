IF @ShardId <> ws.ShardId()
BEGIN;
	THROW 50001, N'The expected shard id is not valid. Data configuration metadata may be corrupted.', 16;
END;
SET NOCOUNT ON;

	BEGIN TRANSACTION;

	UPDATE shd.Customers
	SET Name = @Name,
		CustomerTypeId = @CustomerTypeId
	FROM shd.Customers
	WHERE Customers.CustomerId = @CustomerId
		AND (Customers.Name <> @Name OR Customers.CustomerTypeId <> @CustomerTypeId)


	MERGE shd.Locations As target
	USING @Locations As source
	ON (target.LocationId = source.LocationId AND target.CustomerId = @CustomerId)
	WHEN MATCHED AND (target.LocationTypeId <> source.LocationTypeId
		OR target.StreetAddress <> source.StreetAddress
		OR target.Locality <> source.Locality
		OR target.Region <> source.Region
		OR target.PostalCode <> source.PostalCode
		OR target.Iso3166 <> source.Iso3166
		OR target.Latitude <> source.Latitude
		OR target.Longitude <> source.Longitude) THEN 
	UPDATE SET LocationTypeId = source.LocationTypeId,
		StreetAddress = source.StreetAddress,
		Locality = source.Locality,
		Region = source.Region,
		PostalCode = source.PostalCode,
		Iso3166 = source.Iso3166,
		Latitude = source.Latitude,
		Longitude = source.Longitude
	WHEN NOT MATCHED BY target THEN 
		INSERT (CustomerId, LocationId, LocationTypeId, StreetAddress, Locality, Region, PostalCode, Iso3166, Latitude, Longitude)
		VALUES (@CustomerId, source.LocationId, source.LocationTypeId, source.StreetAddress, source.Locality, source.Region, source.PostalCode, source.Iso3166, source.Latitude, source.Longitude)
	WHEN NOT MATCHED BY source THEN DELETE;

	INSERT INTO shd.CustomerContacts (CustomerId, ContactShardId, ContactId)
	SELECT @CustomerId, Contacts.ShardId, Contacts.RecordId
	FROM @Contacts As Contacts
		LEFT OUTER JOIN shd.CustomerContacts
		ON CustomerContacts.ContactId = Contacts.RecordId
			AND CustomerContacts.CustomerId = @CustomerId
			AND CustomerContacts.ContactShardId = Contacts.ShardId
	WHERE CustomerContacts.ContactId Is Null;

	DELETE shd.CustomerContacts
	FROM shd.CustomerContacts
		LEFT OUTER JOIN @Contacts As Contacts
		ON CustomerContacts.ContactId = Contacts.RecordId
			AND CustomerContacts.ContactShardId = Contacts.ShardId
			AND CustomerContacts.CustomerId = @CustomerId
	WHERE Contacts.RecordId Is NULL;

	INSERT INTO shd.ContactCustomers (ContactId, CustomerShardId, CustomerId)
	SELECT Contacts.RecordId, @ShardId, @CustomerId
	FROM @Contacts As Contacts
		LEFT OUTER JOIN shd.ContactCustomers
		ON ContactCustomers.ContactId = Contacts.RecordId
			AND ContactCustomers.CustomerId = @CustomerId
			AND ContactCustomers.CustomerShardId = @ShardId
	WHERE Contacts.ShardId = @ShardId
		AND ContactCustomers.ContactId Is NULL;

	DELETE shd.ContactCustomers
	FROM shd.ContactCustomers
		LEFT OUTER JOIN @Contacts As Contacts
		ON ContactCustomers.ContactId = Contacts.RecordId
			AND ContactCustomers.CustomerShardId = Contacts.ShardId
			AND ContactCustomers.CustomerId = @CustomerId
	WHERE Contacts.RecordId Is NULL;

END TRANSACTION;
